@charset "UTF-8";*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}aside,footer,header,nav{display:block}body,html{height:100%;width:100%;line-height:1;font-size:14px;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:400}.body{background:#eee}@font-face{font-family:"AdverGhotic";src:url(/font/advergothic-normal.ttf) format("ttf"),url(/font/advergothic-normal.woff) format("woff");font-weight:400}@font-face{font-family:"AdverGhotic";src:url(/font/advergothic-italic.ttf) format("ttf"),url(/font/advergothic-italic.woff) format("woff");font-style:italic;font-weight:400}.title{font-family:AdverGhotic}.main-title{font-size:42px;text-align:center;margin-bottom:35px}.sub-title{font-family:Arial,Helvetica,sans-serif}.wrapper{background:#eee;overflow:hidden}html{scroll-behavior:smooth}.container{margin:0 auto;max-width:1200px;padding:0 5px}._img,.burger__body{position:relative;overflow:hidden}._img img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover;position:absolute;top:0;left:0}.burger__body{background:#fff500;width:100%;-webkit-transition:ease .3s;-o-transition:ease .3s;transition:ease .3s;position:fixed;z-index:6;top:0}.burger__content{position:relative;z-index:15;padding:60px 10px 10px 20px;height:100%;overflow-y:auto;overflow-x:hidden}.burger__content .nav__link a{color:#000;font-size:20px}.burger__trigger{display:none}.header,.header__content{display:-webkit-box;display:-ms-flexbox;display:flex}.header{background:#fff500;position:relative;width:100%;height:60px;font-family:AdverGhotic}.header__content{max-width:1000px;height:100%;margin:0 auto;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{position:relative;z-index:10}.header__logo img{width:60px}.header__nav{-webkit-box-flex:2;-ms-flex-positive:2;flex-grow:2}.header__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav-item{position:relative;max-height:100px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;margin-right:20px;text-transform:uppercase}.header__nav-sub-menu{display:block;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.header__nav-sub-item{height:30px;background:#707070}.header__nav-sub-item:hover{background:#b8b8b8;cursor:pointer}.header__nav-link{display:block;font-size:15px;color:#000;width:100%;line-height:60px;-webkit-transition:all .3s linear;-o-transition:all .3s linear;transition:all .3s linear}.header__nav-link:hover{text-decoration:underline}.slide{width:100%;height:100vh;margin:0 auto;position:relative;overflow:hidden}.slide-sub-title,.slide-title{position:absolute;margin-left:auto;margin-right:auto;padding:0 5px;left:0;right:0;text-align:center;color:#fff;z-index:2}.slide-title{top:40%;font-size:40px;font-style:italic}.slide-sub-title{top:50%;font-size:20px;margin-top:35px}.slide-single{width:100%;height:100vh;position:absolute;-webkit-transition:left ease 1s;-o-transition:left ease 1s;transition:left ease 1s;left:0;top:0}.slide-img-overlay,.splitter{background:#000}.slide-img-overlay img{width:100%;height:100vh;-o-object-fit:cover;object-fit:cover;opacity:.6}.splitter{width:1200px;height:3px;margin:0 auto}.news{background:#eee;margin-top:50px}.news-block,.news-content{display:-webkit-box;display:-ms-flexbox;display:flex}.news-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.news-block{max-width:760px;margin-bottom:50px;border-bottom:1px solid rgba(0,0,0,.15);padding-bottom:25px}.news-img img{width:190px;height:150px;-o-object-fit:cover;object-fit:cover}.news-text-area{padding-left:40px}.news-date{font-size:10px;font-weight:600;color:rgba(0,0,0,.5);letter-spacing:1px}.news-block-title,.news-date{margin-bottom:8px}.main-btn{width:212.67px;height:58px;background:#fff500;font-weight:700;-webkit-box-shadow:0 0 10px rgba(0,0,0,.2);box-shadow:0 0 10px rgba(0,0,0,.2);font-family:AdverGhotic}@media (min-width:999.98px){.header__nav-sub-menu{position:absolute;display:none}.header__nav-item:hover .header__nav-sub-menu{display:-webkit-box;display:-ms-flexbox;display:flex}}@media (max-width:999.98px){.burger__trigger:before{top:0;width:30px;height:3px;background-color:#000}.burger__trigger span{display:block;margin-top:8px}.active:before,.burger__trigger:after,.burger__trigger:before{content:"";display:block;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.burger__trigger span,.burger__trigger:after{position:absolute;width:30px;height:3px;background-color:#000}.burger__trigger:after{bottom:0}.active{cursor:pointer;width:25px;height:25px;-webkit-transition:all .1s ease;-o-transition:all .1s ease;transition:all .1s ease}.active:before{top:0;-webkit-transform:rotateZ(-45deg);-ms-transform:rotate(-45deg);transform:rotateZ(-45deg);margin-top:9px}.active span,.burger__trigger{display:block;position:absolute}.active span,.active:after,.active:before{width:30px;height:3px;background-color:#000}.active span{margin-top:12px;opacity:0}.active:after{content:"";display:block;position:absolute;bottom:0;-webkit-transform:rotateZ(45deg);-ms-transform:rotate(45deg);transform:rotateZ(45deg);margin-bottom:13px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.burger__trigger{cursor:pointer;width:25px;height:25px;z-index:12;right:5%;top:30%}.header__nav-list{display:block;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0}.header__nav-item{margin-bottom:15px;width:100%;max-height:500px}.header__nav{display:none}.header__nav-sub-menu,.sub-menu-active{-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}.header__nav-sub-menu{position:static;max-height:0;overflow:hidden}.sub-menu-active{max-height:500px}}@media (max-width:767.98px){.slide-sub-title{font-size:25px}}@media (max-width:479.98px){.slide-title{font-size:30px;top:30%}.slide-sub-title{font-size:20px;top:40%}.news-block{display:block}.news-img img{width:100%;height:auto}.news-text-area{padding-left:0;padding-top:20px}}@media (max-width:319.98px){.slide-title{font-size:24px;top:30%}.slide-sub-title{font-size:15px;top:40%;margin-top:0}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */